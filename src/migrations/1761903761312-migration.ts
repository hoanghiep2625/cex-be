import { MigrationInterface, QueryRunner } from "typeorm";

export class Migration1761903761312 implements MigrationInterface {
    name = 'Migration1761903761312'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TYPE "public"."users_role_enum" AS ENUM('USER', 'ADMIN', 'SUPER_ADMIN')`);
        await queryRunner.query(`CREATE TABLE "users" ("id" SERIAL NOT NULL, "email" character varying NOT NULL, "username" character varying NOT NULL, "password" character varying NOT NULL, "role" "public"."users_role_enum" NOT NULL DEFAULT 'USER', "is_active" boolean NOT NULL DEFAULT true, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "UQ_97672ac88f789774dd47f7c8be3" UNIQUE ("email"), CONSTRAINT "PK_a3ffb1c0c8416b9fc6f907b7433" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_97672ac88f789774dd47f7c8be" ON "users" ("email") `);
        await queryRunner.query(`CREATE TABLE "user_sessions" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" integer NOT NULL, "listen_key" character varying(255) NOT NULL, "ip_address" character varying(255), "user_agent" character varying(255), "expires_at" TIMESTAMP WITH TIME ZONE NOT NULL, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_501020ef1327588798944ecaf33" UNIQUE ("listen_key"), CONSTRAINT "PK_e93e031a5fed190d4789b6bfd83" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_dbc81ff542b1b3366bae195f2a" ON "user_sessions" ("expires_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_501020ef1327588798944ecaf3" ON "user_sessions" ("listen_key") `);
        await queryRunner.query(`CREATE INDEX "IDX_2c8a3ef6b4e721c6cdf08aaaad" ON "user_sessions" ("user_id", "listen_key") `);
        await queryRunner.query(`CREATE TABLE "balances" ("id" BIGSERIAL NOT NULL, "user_id" integer NOT NULL, "currency" text NOT NULL, "wallet_type" text NOT NULL DEFAULT 'funding', "available" numeric(38,18) NOT NULL DEFAULT '0', "locked" numeric(38,18) NOT NULL DEFAULT '0', "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "CHK_141357578d9f7f13b5830f8eca" CHECK (locked >= 0), CONSTRAINT "CHK_ac602af79d595ef4ceef601c76" CHECK (available >= 0), CONSTRAINT "PK_74904758e813e401abc3d4261c2" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_5c4ac7bba8bcfeaf3244903a55" ON "balances" ("user_id", "currency", "wallet_type") `);
        await queryRunner.query(`CREATE INDEX "idx_balances_user" ON "balances" ("user_id") `);
        await queryRunner.query(`CREATE TABLE "assets" ("code" text NOT NULL, "name" text NOT NULL, "precision" integer NOT NULL DEFAULT '8', "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_bff60c1b89bff7edff592d85ea4" PRIMARY KEY ("code"))`);
        await queryRunner.query(`CREATE TYPE "public"."symbols_type_enum" AS ENUM('spot', 'futures', 'margin', 'isolated')`);
        await queryRunner.query(`CREATE TABLE "symbols" ("id" SERIAL NOT NULL, "symbol" text NOT NULL, "base_asset" text NOT NULL, "quote_asset" text NOT NULL, "tick_size" numeric(20,8) NOT NULL, "lot_size" numeric(20,8) NOT NULL, "min_notional" numeric(20,8) NOT NULL, "max_notional" numeric(20,8), "min_qty" numeric(20,8) NOT NULL, "max_qty" numeric(20,8), "status" character varying(20) NOT NULL DEFAULT 'TRADING', "type" "public"."symbols_type_enum" NOT NULL DEFAULT 'spot', "is_spot_trading_allowed" boolean NOT NULL DEFAULT true, "is_margin_trading_allowed" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "UQ_8537c94ae17acdcbd2cc15c99a0" UNIQUE ("symbol"), CONSTRAINT "PK_f9967bf9e35433b0a81ad95f8bf" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_cf511b4541f3f2241cc13fc295" ON "symbols" ("status") `);
        await queryRunner.query(`CREATE INDEX "IDX_4bbfdc6d45c42281c5319dd5ba" ON "symbols" ("quote_asset") `);
        await queryRunner.query(`CREATE INDEX "IDX_e6ce9775abec1cbf9334cfe6f0" ON "symbols" ("base_asset") `);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_8537c94ae17acdcbd2cc15c99a" ON "symbols" ("symbol") `);
        await queryRunner.query(`CREATE TYPE "public"."trades_taker_side_enum" AS ENUM('BUY', 'SELL')`);
        await queryRunner.query(`CREATE TYPE "public"."trades_liquidity_enum" AS ENUM('M', 'T')`);
        await queryRunner.query(`CREATE TABLE "trades" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "symbol" text NOT NULL, "maker_order_id" character varying NOT NULL, "taker_order_id" character varying NOT NULL, "maker_user_id" integer NOT NULL, "taker_user_id" integer NOT NULL, "taker_side" "public"."trades_taker_side_enum" NOT NULL, "liquidity" "public"."trades_liquidity_enum" NOT NULL, "price" numeric(38,18) NOT NULL, "quantity" numeric(38,18) NOT NULL, "quote_quantity" numeric(38,18) NOT NULL, "maker_fee" numeric(38,18) NOT NULL DEFAULT '0', "maker_fee_asset" text, "taker_fee" numeric(38,18) NOT NULL DEFAULT '0', "taker_fee_asset" text, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_c6d7c36a837411ba5194dc58595" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_6055cc9a84741f8e9d8892a62e" ON "trades" ("taker_side", "symbol", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_2a60ab74154d9cf3c9b6d707f7" ON "trades" ("taker_order_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_90aa85c756d868da86928de544" ON "trades" ("maker_order_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_bf6d0a22b1d800f16ccf548406" ON "trades" ("taker_user_id", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_29649d75db69fba68600c1079e" ON "trades" ("maker_user_id", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_a662f185dd2fa4547624773635" ON "trades" ("symbol", "created_at") `);
        await queryRunner.query(`CREATE TYPE "public"."orders_side_enum" AS ENUM('BUY', 'SELL')`);
        await queryRunner.query(`CREATE TYPE "public"."orders_type_enum" AS ENUM('LIMIT', 'MARKET')`);
        await queryRunner.query(`CREATE TYPE "public"."orders_status_enum" AS ENUM('NEW', 'PARTIALLY_FILLED', 'FILLED', 'CANCELED', 'REJECTED')`);
        await queryRunner.query(`CREATE TYPE "public"."orders_tif_enum" AS ENUM('GTC', 'IOC', 'FOK')`);
        await queryRunner.query(`CREATE TABLE "orders" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" integer NOT NULL, "symbol" text NOT NULL, "side" "public"."orders_side_enum" NOT NULL, "type" "public"."orders_type_enum" NOT NULL, "price" numeric(38,18), "qty" numeric(38,18) NOT NULL, "filled_qty" numeric(38,18) NOT NULL DEFAULT '0', "status" "public"."orders_status_enum" NOT NULL DEFAULT 'NEW', "tif" "public"."orders_tif_enum" NOT NULL DEFAULT 'GTC', "client_order_id" character varying, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), "updated_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "CHK_55870aa0f133ae1ae8ab0e5b22" CHECK (filled_qty >= 0 AND filled_qty <= qty), CONSTRAINT "CHK_95dffecb8e8c5e3c0f140bc851" CHECK (qty > 0), CONSTRAINT "CHK_f7a5ede0d27155e9f4130cd511" CHECK ((type <> 'MARKET') OR (price IS NULL)), CONSTRAINT "CHK_38926307352a9a1c7a2f377853" CHECK ((type <> 'LIMIT') OR (price IS NOT NULL AND price > 0)), CONSTRAINT "PK_710e2d4957aa5878dfe94e4ac2f" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_7eddab37d238a7c0a7264b8b52" ON "orders" ("symbol", "side", "price") `);
        await queryRunner.query(`CREATE INDEX "IDX_fbfc1475fc6797244d160068cb" ON "orders" ("user_id", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_aa7681faf368387da9fff1e575" ON "orders" ("symbol", "status", "created_at") `);
        await queryRunner.query(`CREATE TYPE "public"."ledgers_type_enum" AS ENUM('trade_buy', 'trade_sell', 'trade_fee', 'deposit', 'withdrawal', 'transfer_in', 'transfer_out', 'order_lock', 'order_unlock', 'order_cancel_refund', 'rebate', 'airdrop', 'staking_reward', 'adjustment')`);
        await queryRunner.query(`CREATE TYPE "public"."ledgers_change_type_enum" AS ENUM('increase', 'decrease')`);
        await queryRunner.query(`CREATE TABLE "ledgers" ("id" uuid NOT NULL DEFAULT uuid_generate_v4(), "user_id" integer NOT NULL, "currency" text NOT NULL, "type" "public"."ledgers_type_enum" NOT NULL, "change_type" "public"."ledgers_change_type_enum" NOT NULL, "amount" numeric(38,18) NOT NULL, "balance_before" numeric(38,18) NOT NULL, "balance_after" numeric(38,18) NOT NULL, "reference_type" text, "reference_id" text, "description" text, "metadata" jsonb, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "PK_e8af998892a129f7cf69285d601" PRIMARY KEY ("id"))`);
        await queryRunner.query(`CREATE INDEX "IDX_18bda408bab06bf83ec515273b" ON "ledgers" ("currency", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_7b24d7a431cc6ed088363381e3" ON "ledgers" ("reference_id") `);
        await queryRunner.query(`CREATE INDEX "IDX_c7896383b42932d0306c5eba78" ON "ledgers" ("type", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_d51b103672ab41ccc6c45bea43" ON "ledgers" ("user_id", "currency", "created_at") `);
        await queryRunner.query(`CREATE INDEX "IDX_0b1946097e4c6d4cae9c93b4f3" ON "ledgers" ("user_id", "created_at") `);
        await queryRunner.query(`CREATE TYPE "public"."candles_type_enum" AS ENUM('spot', 'futures', 'margin', 'isolated')`);
        await queryRunner.query(`CREATE TABLE "candles" ("symbol_id" integer NOT NULL, "timeframe" text NOT NULL, "open_time" TIMESTAMP WITH TIME ZONE NOT NULL, "type" "public"."candles_type_enum" NOT NULL DEFAULT 'spot', "close_time" TIMESTAMP WITH TIME ZONE NOT NULL, "open" numeric(20,8) NOT NULL, "high" numeric(20,8) NOT NULL, "low" numeric(20,8) NOT NULL, "close" numeric(20,8) NOT NULL, "volume" numeric(38,8) NOT NULL, "quote_volume" numeric(38,8) NOT NULL, "number_of_trades" integer NOT NULL DEFAULT '0', "taker_buy_base_volume" numeric(38,8) NOT NULL DEFAULT '0', "taker_buy_quote_volume" numeric(38,8) NOT NULL DEFAULT '0', "is_closed" boolean NOT NULL DEFAULT false, "created_at" TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(), CONSTRAINT "CHK_0b0874b3f59314c366145dc7d9" CHECK (timeframe IN ('1m','5m','15m','30m','1h','4h','1d','1w','1M')), CONSTRAINT "PK_c775a4bc83c67c83f3a8fe61a4f" PRIMARY KEY ("symbol_id", "timeframe", "open_time"))`);
        await queryRunner.query(`CREATE UNIQUE INDEX "IDX_c775a4bc83c67c83f3a8fe61a4" ON "candles" ("symbol_id", "timeframe", "open_time") `);
        await queryRunner.query(`ALTER TABLE "user_sessions" ADD CONSTRAINT "FK_e9658e959c490b0a634dfc54783" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "FK_864b90e3b151018347577be4f97" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "balances" ADD CONSTRAINT "FK_d923ec17ed1821f967736bdc0e7" FOREIGN KEY ("currency") REFERENCES "assets"("code") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "symbols" ADD CONSTRAINT "FK_e6ce9775abec1cbf9334cfe6f05" FOREIGN KEY ("base_asset") REFERENCES "assets"("code") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "symbols" ADD CONSTRAINT "FK_4bbfdc6d45c42281c5319dd5ba2" FOREIGN KEY ("quote_asset") REFERENCES "assets"("code") ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trades" ADD CONSTRAINT "FK_e9b9146cd986af67855fbb5c5d8" FOREIGN KEY ("maker_user_id") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trades" ADD CONSTRAINT "FK_965f55d182f7abd80b4a9fc47b5" FOREIGN KEY ("taker_user_id") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "trades" ADD CONSTRAINT "FK_b8d8c2afc2b81a723e0d8cd4af6" FOREIGN KEY ("symbol") REFERENCES "symbols"("symbol") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_a922b820eeef29ac1c6800e826a" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "orders" ADD CONSTRAINT "FK_90792f050aed15682318b108f86" FOREIGN KEY ("symbol") REFERENCES "symbols"("symbol") ON DELETE RESTRICT ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "ledgers" ADD CONSTRAINT "FK_6facac6c75434fe41883d3df83d" FOREIGN KEY ("user_id") REFERENCES "users"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE "candles" ADD CONSTRAINT "FK_3bd80e40e1865f8d4123755dfb6" FOREIGN KEY ("symbol_id") REFERENCES "symbols"("id") ON DELETE CASCADE ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE "candles" DROP CONSTRAINT "FK_3bd80e40e1865f8d4123755dfb6"`);
        await queryRunner.query(`ALTER TABLE "ledgers" DROP CONSTRAINT "FK_6facac6c75434fe41883d3df83d"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_90792f050aed15682318b108f86"`);
        await queryRunner.query(`ALTER TABLE "orders" DROP CONSTRAINT "FK_a922b820eeef29ac1c6800e826a"`);
        await queryRunner.query(`ALTER TABLE "trades" DROP CONSTRAINT "FK_b8d8c2afc2b81a723e0d8cd4af6"`);
        await queryRunner.query(`ALTER TABLE "trades" DROP CONSTRAINT "FK_965f55d182f7abd80b4a9fc47b5"`);
        await queryRunner.query(`ALTER TABLE "trades" DROP CONSTRAINT "FK_e9b9146cd986af67855fbb5c5d8"`);
        await queryRunner.query(`ALTER TABLE "symbols" DROP CONSTRAINT "FK_4bbfdc6d45c42281c5319dd5ba2"`);
        await queryRunner.query(`ALTER TABLE "symbols" DROP CONSTRAINT "FK_e6ce9775abec1cbf9334cfe6f05"`);
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "FK_d923ec17ed1821f967736bdc0e7"`);
        await queryRunner.query(`ALTER TABLE "balances" DROP CONSTRAINT "FK_864b90e3b151018347577be4f97"`);
        await queryRunner.query(`ALTER TABLE "user_sessions" DROP CONSTRAINT "FK_e9658e959c490b0a634dfc54783"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c775a4bc83c67c83f3a8fe61a4"`);
        await queryRunner.query(`DROP TABLE "candles"`);
        await queryRunner.query(`DROP TYPE "public"."candles_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_0b1946097e4c6d4cae9c93b4f3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_d51b103672ab41ccc6c45bea43"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_c7896383b42932d0306c5eba78"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7b24d7a431cc6ed088363381e3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_18bda408bab06bf83ec515273b"`);
        await queryRunner.query(`DROP TABLE "ledgers"`);
        await queryRunner.query(`DROP TYPE "public"."ledgers_change_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."ledgers_type_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_aa7681faf368387da9fff1e575"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_fbfc1475fc6797244d160068cb"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_7eddab37d238a7c0a7264b8b52"`);
        await queryRunner.query(`DROP TABLE "orders"`);
        await queryRunner.query(`DROP TYPE "public"."orders_tif_enum"`);
        await queryRunner.query(`DROP TYPE "public"."orders_status_enum"`);
        await queryRunner.query(`DROP TYPE "public"."orders_type_enum"`);
        await queryRunner.query(`DROP TYPE "public"."orders_side_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_a662f185dd2fa4547624773635"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_29649d75db69fba68600c1079e"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_bf6d0a22b1d800f16ccf548406"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_90aa85c756d868da86928de544"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2a60ab74154d9cf3c9b6d707f7"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_6055cc9a84741f8e9d8892a62e"`);
        await queryRunner.query(`DROP TABLE "trades"`);
        await queryRunner.query(`DROP TYPE "public"."trades_liquidity_enum"`);
        await queryRunner.query(`DROP TYPE "public"."trades_taker_side_enum"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_8537c94ae17acdcbd2cc15c99a"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_e6ce9775abec1cbf9334cfe6f0"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_4bbfdc6d45c42281c5319dd5ba"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_cf511b4541f3f2241cc13fc295"`);
        await queryRunner.query(`DROP TABLE "symbols"`);
        await queryRunner.query(`DROP TYPE "public"."symbols_type_enum"`);
        await queryRunner.query(`DROP TABLE "assets"`);
        await queryRunner.query(`DROP INDEX "public"."idx_balances_user"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_5c4ac7bba8bcfeaf3244903a55"`);
        await queryRunner.query(`DROP TABLE "balances"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_2c8a3ef6b4e721c6cdf08aaaad"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_501020ef1327588798944ecaf3"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_dbc81ff542b1b3366bae195f2a"`);
        await queryRunner.query(`DROP TABLE "user_sessions"`);
        await queryRunner.query(`DROP INDEX "public"."IDX_97672ac88f789774dd47f7c8be"`);
        await queryRunner.query(`DROP TABLE "users"`);
        await queryRunner.query(`DROP TYPE "public"."users_role_enum"`);
    }

}
